dataset:
  # index_path: C:\Users\test\Desktop\Leon\Datasets\ASUS_snoring_subset\index\Kaggle_snoring
  index_path: C:\Users\test\Desktop\Leon\Datasets\ASUS_snoring_subset\index\ASUS_snoring
  index_path: C:\Users\test\Desktop\Leon\Datasets\ASUS_snoring_de
  # index_path: C:\Users\test\Desktop\Leon\Datasets\ASUS_snoring_subset\index\cases\1620055140118_ASUS_I002D
  data_split: 
    - 0.7
    - 0.3
  sample_rate: 16000  
  transform_methods:
    - MFCC
  transform_config:
    n_fft: 1024
    win_length: null
    hop_length: null
    n_mels: 128
    n_mfcc: 128
  fuse_method: mean
  batch_size: 1
  shuffle: False
  is_data_augmentation: False
  preprocess_config:
    

# use a fixed random seed to guarantee that when you run the code twice you will get the same outcome
manual_seed: 0
# model configuration
model:
  # model class, e.g. UNet3D, ResidualUNet3D
  name: resnet50
  # number of input channels to the model
  in_channels: 1
  # number of output channels
  out_channels: 2
  # determines the order of operators in a single layer (gcr - GroupNorm+Conv3d+ReLU)
  # layer_order: gcr
  # feature maps scale factor
  # f_maps: 32
  # number of groups in the groupnorm
  # num_groups: 8
  # apply element-wise nn.Sigmoid after the final 1x1 convolution, otherwise apply nn.Softmax
  activation: null
  # if True applies the final normalization layer (sigmoid or softmax), otherwise the networks returns the output from the final convolution layer; use False for regression problems, e.g. de-noising
  # is_segmentation: true
  output_strides: 16
  pretrained: True

eval:
  show_segmentation_result: False # TODO: change name
  save_segmentation_result: False
  save_prediciton_only: False
  running_mode: valid
  restore_checkpoint_path: C:\Users\test\Desktop\Leon\Projects\Snoring_Detection\checkpoints\run_037
  checkpoint_name: ckpt_best.pth
  eval_dir_key:
  